{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = \"all\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import collections as col\n",
    "\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('data/ETHBTC_1517303160000_1547498100000.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>OPEN_TIME</th>\n",
       "      <th>OPEN</th>\n",
       "      <th>HIGH</th>\n",
       "      <th>LOW</th>\n",
       "      <th>CLOSE</th>\n",
       "      <th>VOLUME</th>\n",
       "      <th>CLOSE_TIME</th>\n",
       "      <th>QUOTE_VOL</th>\n",
       "      <th>NUM_TRADES</th>\n",
       "      <th>TAKE_BASE_VOL</th>\n",
       "      <th>TAKE_QUOTE_VOL</th>\n",
       "      <th>EXTRA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1517303100000</td>\n",
       "      <td>10629400</td>\n",
       "      <td>10673700</td>\n",
       "      <td>10629300</td>\n",
       "      <td>10640100</td>\n",
       "      <td>17785000000</td>\n",
       "      <td>1517303159999</td>\n",
       "      <td>1892484646</td>\n",
       "      <td>412</td>\n",
       "      <td>10429400000</td>\n",
       "      <td>1110434538</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1517303160000</td>\n",
       "      <td>10640100</td>\n",
       "      <td>10643300</td>\n",
       "      <td>10619800</td>\n",
       "      <td>10630100</td>\n",
       "      <td>15433400000</td>\n",
       "      <td>1517303219999</td>\n",
       "      <td>1640768918</td>\n",
       "      <td>276</td>\n",
       "      <td>4288000000</td>\n",
       "      <td>456085864</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1517303220000</td>\n",
       "      <td>10621100</td>\n",
       "      <td>10640000</td>\n",
       "      <td>10621000</td>\n",
       "      <td>10625000</td>\n",
       "      <td>9354600000</td>\n",
       "      <td>1517303279999</td>\n",
       "      <td>994314138</td>\n",
       "      <td>255</td>\n",
       "      <td>4298600000</td>\n",
       "      <td>457129449</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1517303280000</td>\n",
       "      <td>10626200</td>\n",
       "      <td>10634500</td>\n",
       "      <td>10622600</td>\n",
       "      <td>10630800</td>\n",
       "      <td>6746400000</td>\n",
       "      <td>1517303339999</td>\n",
       "      <td>716919384</td>\n",
       "      <td>184</td>\n",
       "      <td>3005400000</td>\n",
       "      <td>319476265</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1517303340000</td>\n",
       "      <td>10630800</td>\n",
       "      <td>10639000</td>\n",
       "      <td>10622600</td>\n",
       "      <td>10632600</td>\n",
       "      <td>7650900000</td>\n",
       "      <td>1517303399999</td>\n",
       "      <td>813139316</td>\n",
       "      <td>182</td>\n",
       "      <td>3471000000</td>\n",
       "      <td>369112330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1517303400000</td>\n",
       "      <td>10632600</td>\n",
       "      <td>10632600</td>\n",
       "      <td>10620000</td>\n",
       "      <td>10622400</td>\n",
       "      <td>6602300000</td>\n",
       "      <td>1517303459999</td>\n",
       "      <td>701424997</td>\n",
       "      <td>191</td>\n",
       "      <td>2897600000</td>\n",
       "      <td>307888440</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1517303460000</td>\n",
       "      <td>10624100</td>\n",
       "      <td>10655300</td>\n",
       "      <td>10621900</td>\n",
       "      <td>10633100</td>\n",
       "      <td>18857000000</td>\n",
       "      <td>1517303519999</td>\n",
       "      <td>2005967577</td>\n",
       "      <td>415</td>\n",
       "      <td>8383700000</td>\n",
       "      <td>892185162</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1517303520000</td>\n",
       "      <td>10633100</td>\n",
       "      <td>10648400</td>\n",
       "      <td>10628900</td>\n",
       "      <td>10632200</td>\n",
       "      <td>10156400000</td>\n",
       "      <td>1517303579999</td>\n",
       "      <td>1080391056</td>\n",
       "      <td>270</td>\n",
       "      <td>6018500000</td>\n",
       "      <td>640444989</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1517303580000</td>\n",
       "      <td>10632600</td>\n",
       "      <td>10649200</td>\n",
       "      <td>10632200</td>\n",
       "      <td>10644200</td>\n",
       "      <td>15437200000</td>\n",
       "      <td>1517303639999</td>\n",
       "      <td>1642054242</td>\n",
       "      <td>282</td>\n",
       "      <td>4604000000</td>\n",
       "      <td>490073186</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1517303640000</td>\n",
       "      <td>10644000</td>\n",
       "      <td>10690000</td>\n",
       "      <td>10633500</td>\n",
       "      <td>10644300</td>\n",
       "      <td>19295500000</td>\n",
       "      <td>1517303699999</td>\n",
       "      <td>2054704543</td>\n",
       "      <td>352</td>\n",
       "      <td>11366500000</td>\n",
       "      <td>1211303174</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       OPEN_TIME      OPEN      HIGH       LOW     CLOSE       VOLUME  \\\n",
       "0  1517303100000  10629400  10673700  10629300  10640100  17785000000   \n",
       "1  1517303160000  10640100  10643300  10619800  10630100  15433400000   \n",
       "2  1517303220000  10621100  10640000  10621000  10625000   9354600000   \n",
       "3  1517303280000  10626200  10634500  10622600  10630800   6746400000   \n",
       "4  1517303340000  10630800  10639000  10622600  10632600   7650900000   \n",
       "5  1517303400000  10632600  10632600  10620000  10622400   6602300000   \n",
       "6  1517303460000  10624100  10655300  10621900  10633100  18857000000   \n",
       "7  1517303520000  10633100  10648400  10628900  10632200  10156400000   \n",
       "8  1517303580000  10632600  10649200  10632200  10644200  15437200000   \n",
       "9  1517303640000  10644000  10690000  10633500  10644300  19295500000   \n",
       "\n",
       "      CLOSE_TIME   QUOTE_VOL  NUM_TRADES  TAKE_BASE_VOL  TAKE_QUOTE_VOL  EXTRA  \n",
       "0  1517303159999  1892484646         412    10429400000      1110434538      0  \n",
       "1  1517303219999  1640768918         276     4288000000       456085864      0  \n",
       "2  1517303279999   994314138         255     4298600000       457129449      0  \n",
       "3  1517303339999   716919384         184     3005400000       319476265      0  \n",
       "4  1517303399999   813139316         182     3471000000       369112330      0  \n",
       "5  1517303459999   701424997         191     2897600000       307888440      0  \n",
       "6  1517303519999  2005967577         415     8383700000       892185162      0  \n",
       "7  1517303579999  1080391056         270     6018500000       640444989      0  \n",
       "8  1517303639999  1642054242         282     4604000000       490073186      0  \n",
       "9  1517303699999  2054704543         352    11366500000      1211303174      0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "AVERAGE_TYPES = ['SMA', 'WMA', 'SMMA']\n",
    "PERIODS = [10, 30, 60, 120, 180, 240, 300]\n",
    "SOURCES = ['OPEN', 'HIGH', 'LOW', 'CLOSE']\n",
    "\n",
    "config = {\n",
    "    'get_atr'    : {                    'period': PERIODS, 'average': AVERAGE_TYPES },\n",
    "    'get_ad'     : {},\n",
    "    'get_abands' : {                    'period': PERIODS, 'alpha': [1, 3, 10, 30] },\n",
    "    'get_adx'    : {                    'period': PERIODS },\n",
    "    'get_alma'   : { 'source': SOURCES, 'period': PERIODS, 'sigma': [1, 3, 10, 30], 'offset': [0.85] },\n",
    "    'get_ao'     : {                    'period1': PERIODS, 'period2': PERIODS },\n",
    "    'get_aroon'  : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_asi'    : { },\n",
    "    'get_bb'     : {                    'period': PERIODS, 'k': [1, 3, 10, 30] },\n",
    "    'get_cc'     : { 'source': SOURCES, 'period1': PERIODS, 'period2': PERIODS, 'period_wma': PERIODS },\n",
    "    'get_cci'    : {                    'period': PERIODS },\n",
    "    'get_ce'     : {                    'period': PERIODS, 'k': [1, 3, 10, 30] },\n",
    "    'get_chop'   : {                    'period': PERIODS },\n",
    "    'get_cmo'    : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_csri'   : { 'source': SOURCES, 'rsi_period': PERIODS, 'updown_length': [1, 3, 10, 30], 'roc_period': PERIODS },\n",
    "    'get_dpo'    : {                    'period': PERIODS },\n",
    "    'get_dc'     : {                    'period': PERIODS },\n",
    "    'get_eom'    : {                    'period': PERIODS },\n",
    "    'get_efi'    : {                    'period': PERIODS },\n",
    "    'get_env'    : { 'source': SOURCES, 'period': PERIODS, 'multiplier': [0.01, 0.03, 0.1, 0.3] },\n",
    "    'get_fi'     : {                    'period': PERIODS },\n",
    "    'get_kama'   : {                    'period_er': PERIODS, 'period1_sc': PERIODS, 'period2_sc': PERIODS },\n",
    "    'get_kc'     : {                    'period_basis': PERIODS, 'period_atr': PERIODS, 'multiplier': [1, 3, 10, 30] },\n",
    "    'get_kst'    : { 'source': SOURCES, 'pROC1': [10], 'pROC2': [15], 'pROC3': [20], 'pROC4': [25], 'pSMA1': [10], 'pSMA2': [10], 'pSMA3': [10], 'pSMA4': [15], 'period': [9] },\n",
    "    'get_macd'   : { 'source': SOURCES, 'sig_period': PERIODS, 'period1': PERIODS, 'period2': PERIODS },\n",
    "    'get_mi'     : {                    'period1': PERIODS, 'period2': PERIODS },\n",
    "    'get_mfi'    : {                    'period': PERIODS },\n",
    "    'get_nvi'    : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_obv'    : { },\n",
    "    'get_sar'    : {                    'af': [0.01, 0.03, 0.1, 0.3], 'af_inc': [0.01, 0.03, 0.1, 0.3], 'af_max': [0.01, 0.03, 0.1, 0.3] },\n",
    "    'get_po'     : { 'source': SOURCES, 'period1': PERIODS, 'period2': PERIODS, 'period_sig': PERIODS },\n",
    "    'get_pvt'    : { },\n",
    "    'get_roc'    : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_rsi'    : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_sctr'   : { 'source': SOURCES, 'period1ab': [200], 'period1roc': [125], 'period2ab': [50], 'period2roc': [20], 'periodrsi': [14] },\n",
    "    'get_stoch'  : { 'source': SOURCES, 'period_k': PERIODS, 'smooth_k': [3], 'smooth_d': [3] },\n",
    "    'get_tsi'    : {                    'period1': PERIODS, 'period2': PERIODS },\n",
    "    'get_trix'   : { 'source': SOURCES, 'period': PERIODS },\n",
    "    'get_ui'     : {                    'period': PERIODS },\n",
    "    'get_uo'     : {                    'period1': PERIODS, 'period2': PERIODS, 'period3': PERIODS },\n",
    "    'get_va'     : { },\n",
    "    'get_vi'     : {                    'period': PERIODS },\n",
    "    'get_vwap'   : {                    'period': PERIODS },\n",
    "    'get_wr'     : {                    'period': PERIODS },\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "### Indicators $$$\n",
    "\n",
    "def get_avg(data, type='SMA', period=14, weights=np.arange(14)):\n",
    "    if type == 'SMA':\n",
    "        return pd.Series(data).rolling(period).mean()\n",
    "    if type == 'WMA':\n",
    "        return pd.Series(data).rolling(period).apply(lambda x: (x*weights)/weights.sum())\n",
    "    #if type == 'EMA':\n",
    "    #    return pd.Series(data).ewm(com=1, adjust=False).mean()\n",
    "    if type == 'SMMA':\n",
    "        return pd.Series(data).ewm(com=period-1, adjust=False).mean()\n",
    "\n",
    "#v# ATR ## https://en.wikipedia.org/wiki/Average_true_range\n",
    "def get_atr(data, average='SMMA', period=14):\n",
    "    tr = pd.Series(np.maximum(\n",
    "        (data.HIGH - data.LOW).values, \n",
    "        np.maximum(\n",
    "            (data.HIGH - data.CLOSE.shift(1)).abs().values, \n",
    "            (data.LOW - data.CLOSE.shift(1)).abs().values\n",
    "        )\n",
    "    ))\n",
    "    atr = get_avg(tr, type=average, period=period)\n",
    "    \n",
    "    atr = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'atr' : atr, 'atr_tr': tr})\n",
    "    return atr\n",
    "\n",
    "#v# AD ## https://en.wikipedia.org/wiki/Accumulation/distribution_index\n",
    "def get_ad(data):    \n",
    "    clv = ((data.CLOSE - data.LOW) - (data.HIGH - data.CLOSE))/(data.HIGH - data.LOW)\n",
    "    accdist = clv * data.VOLUME\n",
    "    accdist = accdist.cumsum()\n",
    "    \n",
    "    accdist = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'ad' : accdist, 'ad_clv_e' : clv})\n",
    "    return accdist\n",
    "\n",
    "#v# ABANDS ## https://www.tradingtechnologies.com/help/x-study/technical-indicator-definitions/acceleration-bands-abands/\n",
    "def get_abands(data, alpha=4, period=30):\n",
    "    upper_band = (data.HIGH*(1+alpha*((data.HIGH-data.LOW)/(data.HIGH+data.LOW)))).rolling(period).mean()\n",
    "    middle_band = data.CLOSE.rolling(period).mean()\n",
    "    lower_band = (data.LOW*(1-alpha*((data.HIGH-data.LOW)/(data.HIGH+data.LOW)))).rolling(period).mean()\n",
    "    \n",
    "    abands = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'abands_ub' : upper_band, 'abands_mb' : middle_band, 'abands_lb' : lower_band})\n",
    "    return abands\n",
    "\n",
    "#v# ADX ## https://en.wikipedia.org/wiki/Average_directional_movement_index\n",
    "def get_adx(data, period=14):\n",
    "    upmove = data.HIGH - data.HIGH.shift(1)\n",
    "    downmove = data.LOW.shift(1) - data.LOW\n",
    "    \n",
    "    pDM = ((upmove > downmove) & (upmove > 0)).values.astype(int)*upmove\n",
    "    nDM = ((downmove > upmove) & (downmove > 0)).values.astype(int)*downmove\n",
    "    \n",
    "    pDM_avg = get_avg(pDM, type='SMMA', period=period)\n",
    "    nDM_avg = get_avg(nDM, type='SMMA', period=period)\n",
    "    \n",
    "    atr = get_atr(data, period=period).atr\n",
    "    pDI = 100*pDM_avg/atr\n",
    "    nDI = 100*nDM_avg/atr\n",
    "    \n",
    "    adx = get_avg(100*(pDI-nDI).abs()/(pDI+nDI), type='SMMA', period=period)\n",
    "    adx = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'adx' : adx, \n",
    "                        'adx_pDM_e' : pDM, 'adx_pDM_e' : pDM,\n",
    "                        'adx_pDM_avg_e' : pDM_avg, 'adx_pDM_avg_e' : pDM_avg,\n",
    "                        'adx_pDI_e' : pDI, 'adx_pDI_e' : pDI,  })\n",
    "    return adx\n",
    "\n",
    "#v# ALMA ## https://www.prorealcode.com/prorealtime-indicators/alma-arnaud-legoux-moving-average/\n",
    "def get_alma(data, source='CLOSE', period=20, sigma=1, offset=0.85):\n",
    "    m = offset*(period-1)\n",
    "    s = period/sigma\n",
    "    \n",
    "    wts = np.array([np.exp(-((k-m)**2)/(2*s*s)) for k in range(period)])\n",
    "    alma = data[source].rolling(period).apply(lambda x: (x*wts).sum()/wts.sum())\n",
    "    \n",
    "    alma = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'alma' : alma})\n",
    "    return alma\n",
    "\n",
    "#v# AO ## https://www.tradingview.com/wiki/Awesome_Oscillator_(AO)\n",
    "def get_ao(data, period1=5, period2=34):\n",
    "    s1 = get_avg((data.HIGH + data.LOW)/2, type='SMA', period=period1)\n",
    "    s2 = get_avg((data.HIGH + data.LOW)/2, type='SMA', period=period2)\n",
    "    ao = s1 - s2\n",
    "    \n",
    "    ao = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'ao' : ao})\n",
    "    return ao\n",
    "\n",
    "#v# AROON ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:aroon_oscillator\n",
    "def get_aroon(data, source='CLOSE', period=25):\n",
    "    arup = 100 * (period - data[source].rolling(period).apply(lambda x: np.argmax(x)))/period\n",
    "    ardn = 100 * (period - data[source].rolling(period).apply(lambda x: np.argmin(x)))/period\n",
    "    ar = arup - ardn\n",
    "    \n",
    "    aroon = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'aroon' : ar, 'ar_up': arup, 'ar_dn': ardn})\n",
    "    return aroon\n",
    "\n",
    "#v# ASI ## https://www.investopedia.com/terms/a/asi.asp\n",
    "def get_asi(data):\n",
    "    _r1 = data.HIGH - data.CLOSE.shift(1)\n",
    "    _r2 = data.LOW - data.CLOSE.shift(1)\n",
    "    _r3 = data.HIGH - data.LOW\n",
    "    _r = np.vstack([_r1.values, _r2.values, _r3.values])\n",
    "    \n",
    "    r1 = (data.HIGH - data.CLOSE.shift(1)) - 0.5*(data.LOW - data.CLOSE.shift(1)) + 0.25*(data.CLOSE.shift(1) - data.OPEN.shift(1))\n",
    "    r2 = (data.LOW - data.CLOSE.shift(1)) - 0.5*(data.HIGH - data.CLOSE.shift(1)) + 0.25*(data.CLOSE.shift(1) - data.OPEN.shift(1))\n",
    "    r3 = (data.HIGH - data.LOW) + 0.25*(data.CLOSE.shift(1) - data.OPEN.shift(1))\n",
    "    r = np.vstack([r1.values, r2.values, r3.values]).T\n",
    "    \n",
    "    r = r[np.arange(r.shape[0]), np.argmax(_r, axis=0)]\n",
    "    si_nm = ((data.CLOSE.shift(1) - data.CLOSE) + 0.5*(data.CLOSE.shift(1) - data.OPEN.shift(1)) + 0.25*(data.CLOSE - data.OPEN))\n",
    "    si = 50*si_nm*np.maximum(data.HIGH.shift(1)-data.CLOSE, data.LOW.shift(1)-data.CLOSE)/r/(data.HIGH - data.LOW)\n",
    "    si_avg = pd.Series(si).cumsum()\n",
    "    asi = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'asi' : pd.Series(si).cumsum(), \n",
    "                       'asi_si': si, 'asi_r1_e': r1, 'asi_r2_e': r2, 'asi_r3_e':r3, 'asi_nm_e':si_nm})\n",
    "    return asi\n",
    "\n",
    "#v# BB ## https://en.wikipedia.org/wiki/Bollinger_Bands\n",
    "def get_bb(data, period=20, k=2):\n",
    "    mb = get_avg(data.CLOSE, type='SMA', period=period)\n",
    "    std = data.CLOSE.rolling(period).stdev()\n",
    "    ub = mb + k*std\n",
    "    lb = mb - k*std\n",
    "    \n",
    "    pb = (data.CLOSE - lb) / (ub - lb)\n",
    "    bbw = (ub - lb) / mb\n",
    "    \n",
    "    bb = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, \n",
    "                        'bb_mb' : mb, 'bb_ub' : ub, \n",
    "                        'bb_lb' : lb, 'bb_pb' : pb,  \n",
    "                      'bb_bbw' : bbw})\n",
    "    return bb\n",
    "\n",
    "#v# CC ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:coppock_curve\n",
    "def get_cc(data, source='CLOSE', period1=11, period2=14, period_wma=10):\n",
    "    p1roc = get_roc(data, source=source, period=period1).roc\n",
    "    p2roc = get_roc(data, source=source, period=period2).roc\n",
    "    \n",
    "    cc = get_avg(p1roc+p2roc, type='WMA', period=period_wma)\n",
    "    cc = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'cc' : cc, 'cc_p1roc_e':p1roc, 'cc_p2roc_e':p2roc})\n",
    "    return cc\n",
    "\n",
    "#v# CCI ## https://en.wikipedia.org/wiki/Commodity_channel_index\n",
    "def get_cci(data, period=14):\n",
    "    tp = (data.HIGH + data.LOW + data.CLOSE)/3\n",
    "    sma_tp = get_avg(tp, type='SMA', period=period)\n",
    "    mad_tp = (sma_tp - tp).abs().rolling(period).mean()\n",
    "    \n",
    "    cci = (1.0/0.015)*((tp-sma_tp)/mad_tp)\n",
    "    \n",
    "    cci = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'cci':cci, 'cci_tp_e':tp,\n",
    "                       'cci_sma_tp_e':sma_tp, 'cci_mad_tp_e':mad_tp})\n",
    "    return cci\n",
    "\n",
    "#v# CE ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:chandelier_exit\n",
    "def get_ce(data, period=22, k=30):\n",
    "    atr = get_atr(data, average='SMMA', period=period).atr\n",
    "    ce_long = data.HIGH.rolling(period).max() - atr*k\n",
    "    ce_shrt = data.LOW.rolling(period).min() + atr*k\n",
    "    \n",
    "    ce = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'ce_long' : ce_long, 'ce_shrt': ce_shrt})\n",
    "    return ce\n",
    "\n",
    "#v# CHOP ## https://www.tradingview.com/wiki/Choppiness_Index_(CHOP)\n",
    "def get_chop(data, period=14):\n",
    "    atr = get_atr(data, period=1).atr\n",
    "    atr_sum = atr.rolling(period).sum()\n",
    "    maxhi = data.HIGH.rolling(period).max()\n",
    "    minlo = data.LOW.rolling(period).min()\n",
    "    \n",
    "    raw_chop = atr_sum/(maxhi - minlo)\n",
    "    \n",
    "    chop = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'chop' : raw_chop})\n",
    "    return chop\n",
    "\n",
    "#v# CMO ## https://www.tradingtechnologies.com/help/x-study/technical-indicator-definitions/chande-momentum-oscillator-cmo/\n",
    "def get_cmo(data, source='CLOSE', period=30):\n",
    "    ps = ((data[source] > data[source].shift(1)).astype(int)*(data[source] - data[source].shift(1))).rolling(period).sum()\n",
    "    ns = ((data[source] < data[source].shift(1)).astype(int)*(data[source].shift(1) - data[source])).rolling(period).sum()\n",
    "    cmo = (ps-ns) / (ps+ns) * 100\n",
    "    \n",
    "    cmo = pd.DataFrame({'OPEN_TIME' : data.OPEN_TIME, 'cmo' : cmo, 'cmo_ps':ps, 'cmo_ns': ns})\n",
    "    return cmo\n",
    "\n",
    "#v# CRSI ## https://www.tradingview.com/wiki/Connors_RSI_(CRSI)\n",
    "def get_csri(data, source='CLOSE', rsi_period=3, updown_length=2, roc_period=100):\n",
    "    rsi = get_rsi(data, period=rsi_period).rsi\n",
    "    \n",
    "    udl = np.zeros_like(data[source].values)\n",
    "    trend = 1\n",
    "    idx = 1\n",
    "    while idx < len(udl):\n",
    "        if trend == 1:\n",
    "            if data[source][idx] > data[source][idx-1]:\n",
    "                udl[idx] = udl[idx-1]+1\n",
    "            else:\n",
    "                udl[idx] = 1\n",
    "                trend = 0\n",
    "        elif trend == 0:\n",
    "            if data[source][idx] < data[source][idx-1]:\n",
    "                udl[idx] = udl[idx-1]+1\n",
    "            else:\n",
    "                udl[idx] = 1\n",
    "                trend = 1\n",
    "        idx = idx+1\n",
    "    udl_rsi = get_rsi(pd.DataFrame({'OPEN_TIME': data.OPEN_TIME, 'udl':udl}), source='udl', period=updown_length).rsi\n",
    "    udl_rsi = udl_rsi.fillna(value=0)\n",
    "    \n",
    "    roc = get_roc(data, source=source, period=1).roc\n",
    "    mroc = roc.rolling(roc_period).apply(lambda x: (x < x[-1]).sum()/float(roc_period)*100)\n",
    "    \n",
    "    crsi = (rsi + udl_rsi + mroc)/3\n",
    "    crsi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'crsi':crsi, 'crsi_rsi':rsi, 'crsi_udl':udl,\n",
    "                         'crsi_udl_rsi':udl_rsi, 'crsi_mroc':mroc})\n",
    "    return crsi\n",
    "\n",
    "#v# DPO ## https://en.wikipedia.org/wiki/Detrended_price_oscillator\n",
    "def get_dpo(data, period=14):\n",
    "    dpo = data.CLOSE - get_avg(data.CLOSE, type='SMA', period=period).shift(int(period/2)+1)\n",
    "    \n",
    "    dpo = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'dpo':dpo})\n",
    "    return dpo\n",
    "\n",
    "#v# DC ## https://www.tradingview.com/wiki/Donchian_Channels_(DC)\n",
    "def get_dc(data, period=30):\n",
    "    uc = data.HIGH.rolling(period).max()\n",
    "    lc = data.LOW.rolling(period).min()\n",
    "    mc = (uc+lc)/2\n",
    "    \n",
    "    dc = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'dc_uc': uc,\n",
    "                      'dc_lc': lc, 'dc_mc': mc})\n",
    "    return dc\n",
    "\n",
    "#v# EOM ## https://www.tradingview.com/wiki/Ease_of_Movement_(EOM)\n",
    "def get_eom(data, period=14):\n",
    "    dm = (data.HIGH+data.LOW)/2 - (data.HIGH.shift(1)+data.LOW.shift(1))/2\n",
    "    br = data.VOLUME/1000000/(data.HIGH - data.LOW)\n",
    "    eom = dm/br\n",
    "    eomma = get_avg(eom, type='SMA', period=period)\n",
    "    \n",
    "    eom = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'eom':eomma,\n",
    "                       'eom_dm_e': dm, 'eom_br_e': br})\n",
    "    return eom\n",
    "\n",
    "#v# EFI ## https://www.tradingview.com/wiki/Elder%27s_Force_Index_(EFI)\n",
    "def get_efi(data, period=13):\n",
    "    efi = (data.CLOSE - data.CLOSE.shift(1))*data.VOLUME\n",
    "    efima = get_avg(efi, type='SMMA', period=period)\n",
    "    \n",
    "    efi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'efi':efima,\n",
    "                       'efi_raw_e': efi})\n",
    "    return efi\n",
    "\n",
    "#v# ENV ## https://www.tradingview.com/wiki/Envelope_(ENV)\n",
    "def get_env(data, source='CLOSE', period=9, multiplier=0.01):\n",
    "    basis = get_avg(data[source], type='SMA', period=period)\n",
    "    ue = basis + multiplier*basis\n",
    "    le = basis - multiplier*basis\n",
    "    \n",
    "    env = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'env':basis, \n",
    "                        'env_ue':ue, 'env_le': le})\n",
    "    return env\n",
    "\n",
    "#v# FI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:force_index\n",
    "def get_fi(data, period=13):\n",
    "    fi = (data.CLOSE - data.CLOSE.shift(1))*data.VOLUME\n",
    "    fi = get_avg(fi, type='SMMA', period=period)\n",
    "    \n",
    "    fi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'fi':fi})\n",
    "    return fi\n",
    "\n",
    "#v# KAMA ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:kaufman_s_adaptive_moving_average\n",
    "def get_kama(data, period_er=10, period1_sc=2, period2_sc=30):\n",
    "    chng = (data.CLOSE - data.CLOSE.shift(period_er)).abs()\n",
    "    vol = (data.CLOSE - data.CLOSE.shift(1)).abs().rolling(period_er).sum()\n",
    "    er = chng/vol\n",
    "    \n",
    "    sc = (er*(2.0/(1+period1_sc) - 2.0/(1+period2_sc)) + 2.0/(1+period2_sc))**2\n",
    "    kama = sc*data.CLOSE \n",
    "    kama = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'kama':kama, 'kama_er':er, 'kama_sc_e':sc})\n",
    "    return kama\n",
    "\n",
    "#v# KC ## https://www.tradingview.com/wiki/Keltner_Channels_(KC)\n",
    "def get_kc(data, period_basis=30, period_atr=14, multiplier=2):\n",
    "    basis = get_avg(data.CLOSE, type='SMMA', period=period_basis)\n",
    "    atr = get_atr(data, average='SMMA', period=period_atr).atr\n",
    "    ue = basis + multiplier*atr\n",
    "    le = basis - multiplier*atr\n",
    "    \n",
    "    kc = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'kc_ue':ue,\n",
    "                         'kc_le': le, 'kc': basis})\n",
    "    return kc\n",
    "\n",
    "#v# KST ## https://www.tradingview.com/wiki/Know_Sure_Thing_(KST)\n",
    "def get_kst(data, source='CLOSE', pROC1=10, pROC2=15, pROC3=20, pROC4=25, pSMA1=10, pSMA2=10, pSMA3=10, pSMA4=15, period=9):\n",
    "    roc1 = get_roc(data, source=source, period=pROC1).roc\n",
    "    roc2 = get_roc(data, source=source, period=pROC2).roc\n",
    "    roc3 = get_roc(data, source=source, period=pROC3).roc\n",
    "    roc4 = get_roc(data, source=source, period=pROC4).roc\n",
    "    \n",
    "    rocma1 = get_avg(roc1, type='SMA', period=pSMA1)\n",
    "    rocma2 = get_avg(roc2, type='SMA', period=pSMA2)\n",
    "    rocma3 = get_avg(roc3, type='SMA', period=pSMA3)\n",
    "    rocma4 = get_avg(roc4, type='SMA', period=pSMA4)\n",
    "    \n",
    "    kst = rocma1*1 + rocma2*2 + rocma3*3 + rocma4*4\n",
    "    kstma = get_avg(kst, type='SMA', period=period)\n",
    "    \n",
    "    kst = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'kst':kstma,\n",
    "                         'kst_raw_e': kst})\n",
    "    return kst\n",
    "\n",
    "#v# MACD ## https://www.tradingview.com/wiki/MACD_(Moving_Average_Convergence/Divergence)\n",
    "def get_macd(data, source='CLOSE', sig_period=9, period1=12, period2=26):\n",
    "    p1ema = get_avg(data[source], type='EMA', period=period1)\n",
    "    p2ema = get_avg(data[source], type='EMA', period=period2)\n",
    "    macd_line = p1ema - p2ema\n",
    "    sig_line = get_avg(macd_line, type='EMA', period=sig_period)\n",
    "    macd_hist = macd_line - sig_line\n",
    "    \n",
    "    macd = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'macd':macd_line,\n",
    "                         'macd_sig': sig_line, 'macd_hist': macd_hist})\n",
    "    return macd\n",
    "\n",
    "#v# MI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:mass_index\n",
    "def get_mi(data, period1=9, period2=25):\n",
    "    hl = data.HIGH - data.LOW\n",
    "    sema = get_avg(hl, type='SMMA', period=period1)\n",
    "    dema = get_avg(sema, type='SMMA', period=period2)\n",
    "    ema_ratio = sema/dema\n",
    "    mi = ema_ratio.rolling(period2).sum()\n",
    "    \n",
    "    mi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'mi':mi, 'mi_sema_e':sema, 'mi_dema_e':dema,\n",
    "                       'mi_ema_ratio_e':ema_ratio})\n",
    "    return mi\n",
    "    \n",
    "#v# MFI ## https://www.tradingview.com/wiki/Money_Flow_(MFI)\n",
    "def get_mfi(data, period=14):\n",
    "    tp = (data.HIGH + data.LOW + data.CLOSE)/3\n",
    "    rmf = tp * data.VOLUME\n",
    "    \n",
    "    pnmf = pd.Series(((rmf > rmf.shift(1)).values.astype(float) - 0.5)*2*rmf)\n",
    "    \n",
    "    pmf = pnmf.rolling(period).apply(lambda x: ((x>0).astype(int)*x).sum())\n",
    "    nmf = pnmf.rolling(period).apply(lambda x: -((x<0).astype(int)*x).sum())\n",
    "    \n",
    "    mfr = pmf/nmf\n",
    "    mfi = 100 - 100/(1+mfr)\n",
    "    \n",
    "    mfi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'mfi':mfi, 'mfi_mfr_e':mfr,\n",
    "                       'mfi_pmf_e':pmf, 'mfi_nmf_e':nmf, 'mfi_tp_e': tp,\n",
    "                       'mfi_rmf_e': rmf})\n",
    "    return mfi\n",
    "\n",
    "#t# NVI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:negative_volume_inde\n",
    "def get_nvi(data, source='VOLUME', period=255):\n",
    "    vo_id = (data.VOLUME < data.VOLUME.shift(1)).values.astype(int)\n",
    "    chng = (data[source] - data[source].shift(1))/data[source].shift(1)\n",
    "    \n",
    "    nvi = (vo_id*chng).cumsum()\n",
    "    nvi = get_avg(nvi, type='SMMA', period=period)\n",
    "    \n",
    "    nvi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'nvi':nvi})\n",
    "    return nvi\n",
    "\n",
    "#t# OBV ## https://www.tradingview.com/wiki/On_Balance_Volume_(OBV)\n",
    "def get_obv(data):\n",
    "    obv = ((data.CLOSE - data.CLOSE.shift(1)).values.astype(float) - 0.5)*2*data.VOLUME\n",
    "    obv = obv.cumsum()\n",
    "    obv = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'obv':obv})\n",
    "    return obv\n",
    "\n",
    "#v# SAR ## https://www.tradingview.com/wiki/Parabolic_SAR_(SAR)\n",
    "def get_sar(data, af=0.02, af_inc=0.01, af_max=0.2):\n",
    "    sar = np.zeros_like(data.CLOSE.values)\n",
    "    trd = np.zeros_like(data.CLOSE.values)\n",
    "    \n",
    "    if data.CLOSE[0] < data.CLOSE[1]:\n",
    "        trend = 1\n",
    "        trd[0] = 1\n",
    "        sar[0] = data.HIGH[0]\n",
    "        ext = data.LOW[0]\n",
    "    else:\n",
    "        trend = 0\n",
    "        trd[0] = 0\n",
    "        sar[0] = data.LOW[0]\n",
    "        ext = data.HIGH[0]\n",
    "    \n",
    "    idx = 1\n",
    "    af_curr = af\n",
    "    while idx < len(sar):\n",
    "        trd[idx] = trend\n",
    "        sar[idx] = sar[idx-1] + af_curr * (ext - sar[idx-1])\n",
    "        af_curr = min(af_curr + af_inc, af_max)\n",
    "        if trend == 1:\n",
    "            if data.HIGH[idx] > sar[idx]:\n",
    "                trend = 0\n",
    "                sar[idx] = ext\n",
    "                ext = data.HIGH[idx]\n",
    "                af_curr = af\n",
    "            else:\n",
    "                ext = min(ext, data.LOW[idx])\n",
    "        elif trend == 0:\n",
    "            if data.LOW[idx] < sar[idx]:\n",
    "                trend = 1\n",
    "                sar[idx] = ext\n",
    "                ext = data.LOW[idx]\n",
    "                af_curr = af\n",
    "            else:\n",
    "                ext = max(ext, data.HIGH[idx])\n",
    "        idx = idx + 1\n",
    "    \n",
    "    sar = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'sar':sar, 'sar_trd':trd})\n",
    "    return sar\n",
    "\n",
    "#v# PO ## https://www.tradingview.com/wiki/Price_Oscillator_(PPO)\n",
    "def get_po(data, source='CLOSE', period1=12, period2=26, period_sig=9):\n",
    "    po1 = get_avg(data[source], type='SMMA', period=period1)\n",
    "    po2 = get_avg(data[source], type='SMMA', period=period2)\n",
    "    \n",
    "    po = (po1 - po2) / po2\n",
    "    \n",
    "    sig = get_avg(po, type='SMMA', period=period_sig)\n",
    "    \n",
    "    hist = po - sig\n",
    "    \n",
    "    po = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'po':po, 'po_sig':sig, 'po_hist':hist, 'po_po1_e':po1, 'po_po2_e':po2})\n",
    "    return po\n",
    "\n",
    "#v# PVT ## https://www.tradingview.com/wiki/Price_Volume_Trend_(PVT)\n",
    "def get_pvt(data):\n",
    "    raw_pvt = data.VOLUME * (data.CLOSE - data.CLOSE.shift(1))/data.CLOSE.shift(1) * data.VOLUME\n",
    "    pvt = raw_pvt.cumsum()\n",
    "    pvt = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'pvt':pvt,\n",
    "                       'pvt_raw_e': raw_pvt})\n",
    "    return pvt\n",
    "    \n",
    "#v# ROC ## https://www.tradingview.com/wiki/Rate_of_Change_(ROC)\n",
    "def get_roc(data, source='CLOSE', period=14):\n",
    "    roc = 100*(data[source] - data[source].shift(period))/data[source].shift(period)\n",
    "    roc = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'roc':roc})\n",
    "    return roc\n",
    "\n",
    "#v# RSI ## https://www.tradingview.com/wiki/Relative_Strength_Index_(RSI)\n",
    "def get_rsi(data, source='CLOSE', period=14):\n",
    "    diff = (data[source] - data[source].shift(1)).values\n",
    "    gain = (diff > 0).astype(int) * diff\n",
    "    loss = (diff < 0).astype(int) * -diff\n",
    "    \n",
    "    gain_ma = get_avg(gain, type='SMA', period=period)\n",
    "    loss_ma = get_avg(loss, type='SMA', period=period)\n",
    "    \n",
    "    rs = gain_ma/loss_ma\n",
    "    \n",
    "    rsi = 100 - (100 / (1 + rs))\n",
    "    rsi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'rsi':rsi, 'rsi_rs_e':rs,\n",
    "                       'rsi_diff_e': diff, 'rsi_gain_e': gain,\n",
    "                       'rsi_loss_e': loss, 'rsi_gain_ma_e': gain_ma,\n",
    "                       'rsi_loss_ma_e': loss_ma})\n",
    "    return rsi\n",
    "\n",
    "#v# SCTR ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:sctr\n",
    "def get_sctr(data, source='CLOSE', period1ab=200, period1roc=125, period2ab=50, period2roc=20, periodrsi=14):\n",
    "    pab200 = (data[source] - get_avg(data[source], type='SMA', period=period1ab))/get_avg(data[source], type='SMA', period=period1ab)\n",
    "    roc125 = get_roc(data, source=source, period=period1roc).roc\n",
    "    \n",
    "    pab50 = (data[source] - get_avg(data[source], type='SMA', period=period2ab))/get_avg(data[source], type='SMA', period=period2ab)\n",
    "    roc20 = get_roc(data, source=source, period=period2roc).roc\n",
    "    \n",
    "    rsi = get_rsi(data, source=source, period=periodrsi).rsi\n",
    "    \n",
    "    sctr = 0.3*pab200 + 0.3*roc125 + 0.15*pab50 + 0.15*roc20 + 0.1*rsi\n",
    "    \n",
    "    sctr = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'sctr':sctr})\n",
    "    return sctr\n",
    "\n",
    "## SFS\n",
    "#v# STOCH ## https://www.tradingview.com/wiki/Stochastic_(STOCH)\n",
    "def get_stoch(data, source='CLOSE', period_k=14, smooth_k=3, smooth_d=3):\n",
    "    pK_series = (data[source] - data.LOW.rolling(period_k).min())/(data.HIGH.rolling(period_k).max() - data.LOW.rolling(period_k).min())\n",
    "    pK = get_avg(pK_series, type='SMA', period=smooth_k)\n",
    "    pD = get_avg(pK, type='SMA', period=smooth_d)\n",
    "    \n",
    "    stoch = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'stoch_pK':pK,\n",
    "                       'stoch_pD': pD, 'stoch_pK_s_e': pK_series})\n",
    "    return stoch\n",
    "\n",
    "#v# TSI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:true_strength_index\n",
    "def get_tsi(data, period1=13, period2=25):\n",
    "    pc = data.CLOSE - data.CLOSE.shift(1)\n",
    "    pc_fs = get_avg(pc, type='SMMA', period=period1)\n",
    "    pc_ss = get_avg(pc_fs, type='SMMA', period=period2)\n",
    "    \n",
    "    apc = (data.CLOSE - data.CLOSE.shift(1)).abs()\n",
    "    apc_fs = get_avg(apc, type='SMMA', period=period1)\n",
    "    apc_ss = get_avg(apc_fs, type='SMMA', period=period2)\n",
    "    \n",
    "    tsi = 100 * pc_ss/apc_ss\n",
    "    tsi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'tsi':tsi, 'tsi_pc_ss_e':pc_ss, 'tsi_apc_ss_e':apc_ss})\n",
    "    return tsi\n",
    "    \n",
    "#v# TRIX ## https://www.tradingview.com/wiki/TRIX\n",
    "def get_trix(data, source='CLOSE', period=18):\n",
    "    ssmma = get_avg(data[source], type='SMMA', period=period)\n",
    "    dsmma = get_avg(ssmma, type='SMMA', period=period)\n",
    "    tsmma = get_avg(dsmma, type='SMMA', period=period)\n",
    "    \n",
    "    pdiff = (tsmma - tsmma.shift(1))/tsmma.shift(1)\n",
    "    \n",
    "    trix = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'trix':pdiff, \n",
    "                         'trix_ssmma_e':ssmma,\n",
    "                         'trix_dsmma_e':dsmma,\n",
    "                         'trix_tsmma_e':tsmma})\n",
    "    return trix\n",
    "\n",
    "#v# UI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:ulcer_index\n",
    "def get_ui(data, period=14):\n",
    "    pd = (data.CLOSE - data.CLOSE.rolling(period).max())/data.CLOSE.rolling(period).max()*100\n",
    "    sa = pd.rolling(14).std()\n",
    "    sa = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'sa':sa, 'sa_pd':pd})\n",
    "    return sa\n",
    "\n",
    "#v# UO ## https://www.tradingview.com/wiki/Ultimate_Oscillator_(UO)\n",
    "def get_uo(data, period1=7, period2=14, period3=28):\n",
    "    tl = pd.Series(np.minimum(data.LOW, data.CLOSE.shift(1))) # true low\n",
    "    bp = data.CLOSE - tl # buying pressure\n",
    "    \n",
    "    tr = pd.Series(np.maximum(data.HIGH, data.CLOSE.shift(1)) - np.minimum(data.LOW, data.CLOSE.shift(1)))\n",
    "    \n",
    "    s1 = bp.rolling(period1).sum()/tr.rolling(period1).sum()\n",
    "    s2 = bp.rolling(period2).sum()/tr.rolling(period2).sum()\n",
    "    s3 = bp.rolling(period3).sum()/tr.rolling(period3).sum()\n",
    "    \n",
    "    min_period = min(period1, min(period2, period3))\n",
    "    max_period = max(period1, max(period2, period3))\n",
    "    mid_period = period1+period2+period3 - min_period - max_period\n",
    "    \n",
    "    if min_period==period1:\n",
    "        if period2 > period3:\n",
    "            _ = s2\n",
    "            s2 = s3\n",
    "            s3 = _\n",
    "    elif min_period==period2:\n",
    "        _ = s1\n",
    "        s1 = s2\n",
    "        if period1 < period3:\n",
    "            s2 = _\n",
    "        else:\n",
    "            s2 = s3\n",
    "            s3 = _\n",
    "    elif min_period==period3:\n",
    "        _ = s1\n",
    "        s1 = s3\n",
    "        if period1 < period2:\n",
    "            s3 = s2\n",
    "            s2 = _\n",
    "        else:\n",
    "            s3 = _\n",
    "    \n",
    "    uo = 100*(max_period*s1 + mid_period*s2 + min_period*s3)/(max_period+mid_period+min_period)\n",
    "    uo = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'uo':uo, 'uo_tl_e':tl,\n",
    "                       'uo_bp_e':bp, 'uo_tr_e':tr, 'uo_s1_e':s1,\n",
    "                       'uo_s2_e':s2, 'uo_s3_e':s3})\n",
    "    return uo\n",
    "\n",
    "#v# VA ## http://www.onlinetradingconcepts.com/TechnicalAnalysis/VolumeAccumulation.html\n",
    "def get_va(data):\n",
    "    va = data.VOLUME*(data.CLOSE - (data.HIGH+data.LOW)/2)\n",
    "    va = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'va':va})\n",
    "    return va\n",
    "    \n",
    "#v# VI ## https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:vortex_indicator\n",
    "def get_vi(data, period=14):\n",
    "    pVM = (data.HIGH - data.LOW.shift(1)).abs().rolling(period).sum()\n",
    "    nVM = (data.LOW - data.HIGH.shift(1)).abs().rolling(period).sum()\n",
    "    \n",
    "    tr = get_atr(data, average='SMMA', period=period).atr_tr.rolling(period).sum()\n",
    "    \n",
    "    pVI = pVM/tr\n",
    "    nVI = nVM/tr\n",
    "    \n",
    "    vi = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'vi_pVI':pVI, 'vi_nVI':nVI,\n",
    "                      'vi_pVM_e':pVM, 'vi_nVM_e':nVM})\n",
    "    return vi\n",
    "\n",
    "#v# VWAP ## https://www.tradingview.com/wiki/Volume_Weighted_Average_Price_(VWAP)\n",
    "def get_vwap(data, period=30):\n",
    "    tp = (data.HIGH + data.LOW + data.CLOSE)/3\n",
    "    tp_v = tp*data.VOLUME\n",
    "    \n",
    "    vwap = tp_v.rolling(period).sum()/tp.rolling(period).sum()\n",
    "    vwap = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'vwap':vwap, 'vwap_tp_e':tp,\n",
    "                       'vwap_tp_v_e':tp_v})\n",
    "    return vwap\n",
    "\n",
    "#v# WR ## https://www.tradingview.com/wiki/Williams_%25R_(%25R)\n",
    "def ger_wr(data, period=30):\n",
    "    hh = data.HIGH.rolling(period).max()\n",
    "    ll = data.LOW.rolling(period).min()\n",
    "    \n",
    "    wr = (hh - data.CLOSE)/(hh - ll)\n",
    "    wr = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME, 'wr':wr, 'wr_hh_e':hh, 'wr_ll_e':ll})\n",
    "    \n",
    "    return wr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def cart_prod(config):\n",
    "    return (dict(zip(inp.keys(), values)) for values in product(*config.values()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def indicators_man_feat(data):\n",
    "    ind_man_feat = pd.DataFrame({'OPEN_TIME':data.OPEN_TIME})\n",
    "    \n",
    "    for config in \n",
    "    ger_wr(data, period=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1042479d0>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x108dab190>]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10416fa50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABKEAAAJCCAYAAAAYx9QxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xd4W+X5PvD71bDkIe+97dixE2eSQQIJIRD2LBsKhZZV\nfrSltNACHZRSSgerhZZVZr9sSphhJiGL7MTZtuOVeNvykqw9zu8PjdixbMuOZdnW/bmuXNjHR0dv\nQhxL93me5xWSJIGIiIiIiIiIiCiQZMFeABERERERERERTX4MoYiIiIiIiIiIKOAYQhERERERERER\nUcAxhCIiIiIiIiIiooBjCEVERERERERERAHHEIqIiIiIiIiIiAKOIRQREREREREREQXckCGUEEIt\nhNgmhNgjhDgghHjIffxVIUSNEKLU/WuO+/jpQojuXsd/3+ta5wohyoUQlUKI+3odzxNCbHUff0cI\nEeY+rnJ/Xun+em6vx9zvPl4uhDhn9P5IiIiIiIiIiIhotPlTCWUBcIYkSbMBzAFwrhBikftr90qS\nNMf9q7TXYzb0Ov5HABBCyAH8C8B5AKYDuFYIMd19/l8BPClJUgGATgA3u4/fDKDTffxJ93lwP+4a\nACUAzgXwb/f1iYiIiIiIiIhoHFIMdYIkSRKAHvenSvcvaQTPtRBApSRJ1QAghHgbwCVCiEMAzgBw\nnfu81wD8AcCzAC5xfwwA7wN4Rggh3MffliTJAqBGCFHpvv7mgZ48MTFRys3NHcGyiYiIiIiIiIjI\nl507d2olSUry59whQyjAW8W0E0ABgH9JkrRVCHEHgEfc7XarAdznDoUAYLEQYg+ARgD3SJJ0AEAG\ngLpel60HcDKABABdkiTZex3PcH/sfYwkSXYhRLf7/AwAW467VgYGkZubix07dvjz2yUiIiIiIiIi\nIj8IIY74e65fg8klSXJIkjQHQCaAhUKIGQDuB1AMYAGAeAC/dp++C0COu33vaQAfDmPto0oIcZsQ\nYocQYkdbW1uwlkFEREREREREFPKGtTueJEldANYCOFeSpCbJxQLgFbja4SBJkk6SpB73x6sAKIUQ\niQAaAGT1ulym+1g7gFghhOK44+j9GPfXY9znD3St49f7giRJ8yVJmp+U5FdlGBERERERERERBYA/\nu+MlCSFi3R+HAzgLQJkQIs19TAC4FMB+9+ep7mMQQix0P0c7gO0ACt074YXBNVj8Y/fMqbUArnA/\n5Y0APnJ//LH7c7i/vsZ9/scArnHvnpcHoBDAtpH/MRARERERERERUSD5MxMqDcBr7rlQMgDvSpL0\nqRBijRAiCYAAUArgx+7zrwBwhxDCDsAE4Bp3cGQXQvwEwJcA5ABeds+KAlytfG8LIf4EYDeAl9zH\nXwLwX/fg8Q64gitIknRACPEugIMA7ADulCTJMfI/BiIiIiIiIiIiCiThyocmv/nz50scTE5ERERE\nRERENHqEEDslSZrvz7nDmglFREREREREREQ0EgyhiIiIiIiIiIgo4BhCERERERERERFRwDGEIiIi\nIiIiIiKigGMIRUREREREREREAccQioiIiIiIiIiIAo4hFBERERERERERBRxDKCIiIiIiIiIiCjiG\nUEREREREREREFHAMoYiIiIiIiIiIKOAYQhERERERERERUcAxhCIiIiIiIiIiooBjCEVERERERERE\nRAHHEIqIiIiIiIiIiAKOIRQREREREREREQUcQygiIiIiIiIiIgo4hlBERERERERERBRwDKGIiIiI\naFKq6zDi+v9sRYvOHOylEBERERhCEREREdEktbmqHRsrtXhpY02wl0JERERgCEVEREREk1RdpxEA\n8NbWo9CbbUFeDRERETGEIiIiIqJJqa7DCJVCBr3Fjne21wV7OURERCGPIRQRERERTUp1nSbMzY7F\nwrx4vLKpFnaHM9hLIiIiCmkMoYiIiIhoUqrrMCIrLgK3Ls1HQ5cJq/Y3B3tJREREIY0hFBERERFN\nOmabA616C7LiI3BmcTLyEyPx4vpqSJIU7KURERGFLIZQRERERDTp1HeaAABZ8eGQyQRuXpqHfQ3d\n2FrTEeSVERERhS6GUEREREQ06Xh2xsuKiwAAXH5SJqLVCqzc1RDMZREREYU0hlBERERENOnUd7hD\nqHhXCKVWylGSHoOKVn0wl0VERBTSGEIR9bK+og03v7odTifnRRAREU1kRzuMCFPIkBSl8h4rSI5C\nZWsP50IREREFCUMool6+PNCM1WWtMNkcwV4KERERnYC6DhMy41zzoDwKkqOgN9vRprcEcWVERESh\niyEUUS+VrT0AXDvqEBER0cRV12n0zoPyKEiOAgAcdv+8JyIiorHFEIqol6o2dwhldwZ5JURERHQi\n6jqMyI73HUJVMoQiIiIKCoZQRG5dRiu0PVYAgIWVUERERBNWt8kGndmOrPjwPseTNSpoVAqGUERE\n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\nYWlUCCFuA3AbAERFRY3Wy5ATqGk2QpKAYA2LUERERERERETOaFC740mS1ABgJ4BlACYByBNCFALw\nEELknXX6VThrFE+SpDLb/+YD2AVgBoBaAL5CCHtBLBJAme33ZQAmAIDtcR/b+R3He7im8+u9IklS\nmiRJaUFBQYP5o9I4o9XpAYDB5EREREREREROaiC74wXZOqAghHAHsArAYUmSQiVJipEkKQZAqy08\n3H5NIqyB5Xs7HfMTQqhsvw8EsBDASUmSJFgLW5fZTr0BwGbb77fYvobt8R2287cAuMq2e95EAPEA\nDgzlL4Bcg7bJAAAcxyMiIiIiIiJyUgMZxwsD8IYtiFwG4H1Jkj7v55qrYA0OlzodSwLwshDCYnue\nJyRJOml77HcA3hNCPArgKICNtuMbAbxl67Kqsz0vJEnKFEK8D+AkgHYAd5019kfnGK3OVoTiOB4R\nERERERGRU+q3CCVJ0nFYx+b6OsfrrK//3MM5ewBM6eX6fPSwu50kSXpYs6d6uuYxAI/1tS46d2h1\neggBBHqxCEVERERERETkjAaVCUXkrLQ6A/w9lHCT81uaiIiIiIiIyBnxEzu5BG2THkHMgyIiIiIi\nIiJyWixCkUvQ6gwI1nBnPCIiIiIiIiJnxSIUuQRtk4E74xERERERERE5MRahaNyzWCTUNLMIRURE\nREREROTMWISica+u1Yh2i8QiFBEREREREZETYxGKxj1tkwEAmAlFRERERERE5MRYhKJxT6vTAwA7\noYiIiIiIiIicGItQNO5pdbZOKG92QhERERERERE5KxahaNyrthehNOyEIiIiIiIiInJWLELRuKdt\n0sNbrYDaTe7opRARERERERFRL1iEonFPqzMwD4qIiIiIiIjIybEIReOetQjFPCgiIiIiIiIiZ8Yi\nFI17Wp2eeVBERERERERETo5FKBrXJEmCtonjeERERERERETOjkUoGtea9O0wtFs4jkdERERERETk\n5FiEonGtWqcHAI7jERERERERETk5FqFoXNM2GQCAnVBERERERERETo5FKBrXtDpbEYqdUERERERE\nREROjUUoGte09nE8BpMTEREREdH/t3fvUZZdd33gv7uruqvf6qdaUrdiyZI8tmVZMu4IBWwH27Et\nCFgO4EQkDA4j4iHYIYGZYDxZsxgIngUhWWJgwImDHAQEbMeJY9kDGC1bgCFIsmxLMpIxakl+qFtS\n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\ncvcDpmOcstIZo7SBcUobGKesdMYobfBCGaeW4wEAAACw6IRQAAAAACw6IVQ7fWC5OwCzYJyy0hmj\ntIFxShsYp6x0xiht8IIYp2pCAQAAALDozIQCAAAAYNEJoZZBKaWrlPLFUsonm+dvKKV8oZTyl6WU\nO0sp3U379lLKx0opD5dS7i+lvKJp/59KKQ9OeZwqpfyLZt+OUsrdpZTHmj+3N+2llPIrpZQDzfW+\nZbnePyvfIo/R/6uUcnDKvu+a8rrvbcboV0opb1mO9057zHecNvt+opTySHPO75VS1jftV5ZS7mvG\n44dLKeua9p7m+YFm/xVL/85pk0Uep79ZSnlyyufpDU27n/nM2gKN0X/eHP/I5M/7pt33UhbEIo9T\n302Zt1LKV0spX2rG0ANN25w/A0sp72iOf6yU8o4p7a9urn+gObdM9xormRBqefzzJF9OklLKmiR3\nJrm11vqKJF9LMjnY/o8kD9ZaX5nkh5L8P0lSa/1KrfWGWusNSV6dZCDJx5pzfjrJp2ut1yT5dPM8\nSb4zyTXN451J3r+o75C2W8wxmiS3T+6vtf5+8zovT3JrkmuT3Jzk10spXYv8Pmm3eY3TUsreJD+e\nZH9zTlc6YzBJfjGdcXp1khNJbmvab0tyomm/vTkOprOY4zRJ/uWUz9MHmzY/85mL+Y7RVyT5J0lu\nTHJ9ku8upVzdnON7KQtlMcdp4rspC+P1zRja3zyf02dgKWVHkp9J8q3pjNWfmRIqvT+dMTx53s0z\nvMaKJYRaYqWUfUn+bpLfaJp2Jhmptf518/zuJN/XbL88yWeSpNb6V0muKKXsOeuSb0zyeK31a83z\nW9L5UE7z59umtP9W7bg3ybZSyqUL985YLZZgjJ7PLUk+VGsdrrU+meRAOh++8DwLOE67k2xofoO6\nMcmh5jdLb0jy0eaYsz9LJz9jP5rkjZO/iYKzLeY4neGl/cxnVhZojL4syX211oFa61iSP0nyvc05\nvpcyb0swTs/Hd1Pma66fgW9Jcnet9Xit9UQ6Y/vmZt/WWuu9tVPU+7dy7u+mU19jxRJCLb1fTvJT\nSSaa50eTdJdSJtPS709yebP9UJoPx1LKjUlelGTfWde7NcnvTXm+p9b6dLP9TJLJL7B7k3xjynFP\nNW1wtsUeo0ny7mbq6QenpPvGKHMx73Faaz2Y5N8m+XqSp5OcrLX+UTpfbnubL6nJc8fimXHa7D/Z\nHA/nspjjdNL7ms/T20spPU2bz1NmayF+5v9lkteWUnaWUjYm+a4p5/heykJY7HGa+G7K/NUkf1RK\n+Xwp5Z1N21w/A6drf+oc7dO9xoolhFpCpZTvTnK41vr5ybYmybw1ye2llPuT9CUZb3b/Qjqp6INJ\n/lmSL07Zl9KpUfLWJP/lXK/XXNvtD5m1JRqj709yVZIb0vkP1b9btDfEqrRQ47T5knlLkiuTXJZk\nUynlB5funbCaLdE4fW+Slyb5m0l2JHnPor8xVo2FGqO11i+nszT5j5L8YZIHp5yTs67teylzskTj\n1HdTFsJraq3fks5Su3eVUl43dedSfAa25XO2e7k78ALz7UneWjrF7tYn2VpK+Z1a6w8meW2SlFLe\nnOQlSVJrPZXkh5v2kuTJJE9Mud53JvlCrfXZKW3PllIurbU+3UzbO9y0H8xz0/59TRtMtehjdOp2\nKeU/Jvlk89QYZbYWapy+JcmTtdYjzb7/luTbkvzndL7AdjeznaaOxclx+lSzNOqiJMcW/y3TQos9\nTn9nym8+h0sp/ynJ/94893nKbCzYz/xa6x1J7mj2/d/55m/sfS9lvhZ9nPpuykJoZi6n1nq4lPKx\ndJZuzvUz8GCS7zir/Y+b9n3nOD7TvMaKZSbUEqq1vrfWuq/WekU66f1naq0/WEq5OOncdSmd32L+\n++b5tmYmSZL8SJI/bT5YJ/1Anr/M6a58szDfO5J8fEr7D5WOm9KZzv90YIqlGKNn1Xz4e+lMj046\nY/TW0rn72JXpFNy7f0HfIKvCAo7Trye5qZSysfmi+sYkX25+i3RPOtP7k+d/lk5+xn5/89or/jdO\nLL3FHqfNOZc2f5Z0akBM/Tz1M59pLeTP/Cnn/I10lkL9bnOc76XMy1KMU99Nma9SyqZSypbJ7SRv\nTmcczfUz8FNJ3lw6d3nc3lznU82+U6WUm5qf+T+Uc383nfoaK5aZUCvDv2ymmq5J8v5a62ea9pcl\nubOUUpM8km/enWlycL8pyf961rV+IclHSim3pXOniL/ftP9+OmufD6Rzp7IfXqT3wuq0kGP035TO\nbcRrkq9O7q+1PlJK+UiSR5OMJXlXrfV50/lhGnMap7XW+0opH03yhXTG3BeTfKA55z1JPlRK+fmm\n/Y6m/Y4kv11KOZDkeJ57lzKYjYUcp/+5lLI7SUlnacmPNu1+5jMfc/6Zn+S/llJ2JhlN5+d3b9Pu\neymLZSHHqe+mzNeeJB/r5EPpTvK7tdY/LKV8LnP4DKy1Hi+l/Oskn2uO+7la6/Fm+8eS/GaSDUn+\noHkk5/+cXbGKX+ACAAAAsNgsxwMAAABg0QmhAAAAAFh0QigAAAAAFp0QCgAAAIBFJ4QCAAAAYNEJ\noQAAAABYdEIoAAAAABadEAoAAACARff/A+jcQ92IUMPBAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1042479d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1041da3d0>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x108e6c310>]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABIQAAAJCCAYAAACxsxylAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3XmQJPl1H/ZvVmZV1t3Vd89Mz7G7WOxidwHQEAAuL5Pi\nfTh4WHZQFG1RokzIsnU4bIcsOWibkKUIyxLDphwEHXCQQYoHQNoUaSJEiCcWNEiAwII49j7nnumj\n+qi78vYfmb+suyqrKruOrO8nAhHYnp6umu6q7MyX732f5DgOiIiIiIiIiIhodcTm/QSIiIiIiIiI\niGi2WBAiIiIiIiIiIloxLAgREREREREREa0YFoSIiIiIiIiIiFYMC0JERERERERERCuGBSEiIiIi\nIiIiohXDghARERERERER0YphQYiIiIiIiIiIaMWwIEREREREREREtGKUeT3w1taWc+PGjXk9PBER\nERERERFR5Hzxi18sOo6zPerz5lYQunHjBp5//vl5PTwRERERERERUeRIknQ7yOdxZIyIiIiIiIiI\naMWwIEREREREREREtGJYECIiIiIiIiIiWjEsCBERERERERERrRgWhIiIiIiIiIiIVgwLQkRERERE\nREREK4YFISIiIiIiIiKiFcOCEBERERERERHRimFBiIiIiIiIiIhoxbAgRERERERERES0YlgQIiIi\nIiIiIiJaMSwIERERERERERGtGBaEiIiIiIiIiIhWDAtCREREREREREQrhgUhIiIiIiIiIqIVw4IQ\nEREREREREdGKYUGIiIiIiIiIiGjFsCBERERERERERLRiWBAiIiIiIiIiIloxIwtCkiT9giRJR5Ik\nvTjgzyVJkv6VJElvSpL0VUmS3hf+0yQiIiIiIiIiorAE6RD6RQDfPeTPvwfA497/PgTg56Z/WkRE\nREREREREdFFGFoQcx/kTAKdDPuUHAPxrx/U5AAVJki6F9QSJiIiIiIiIiChcYWQIXQFwt+2/73kf\nIyIiIiIiIoqEmmbix37h87hZrM37qRCFYqah0pIkfUiSpOclSXr++Ph4lg9NRERERERENLG3jqv4\n9OvH+NSrR/N+KkShCKMgdB/A1bb/3vc+1sNxnI86jvN+x3Hev729HcJDExEREREREV28StME4BaG\niKIgjILQ7wD46962sWcBlBzHeRjC1yUiIiIiIiJaCJWmAQB4+5gjYxQNyqhPkCTpYwC+BcCWJEn3\n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\nmz4u4nOxfxARERG1pZUjiDkAJyu+PwXgpkb3kVJqQoh1ABMAlivvJIR4J4B3AsDCAjNAiIiISOdz\nO/v9Evrq8tkIbr5wAtcsRPH6A3O4aDrc0uPu2D+DS3eObmYVERERtW9bLylJKT8M4MMAcP3114/u\nZUAiIiKiCuNBDz77zudt+XF3Xjffg1dDREREo6CVptKLACqbwswb2yzvI4RwARgDsNKNF0hERERE\nRERERN3VSkDoIQAXCSH2CCE8AO4C8OWa+3wZwFuNr+8E8G32DyIiIiIiIiIisqdNS8aMnkC/COBr\nAJwAPialfFwI8T4AD0spvwzgbgCfEkIcAbAKPWhEREREREREREQ21FIPISnlVwF8tWbb71V8nQXw\nk919aURERERERERE1AutlIwREREREREREdEQYUCIiIiIiIiIiGjEMCBERERERERERDRiGBAiIiIi\nIiIiIhoxDAgREREREREREY0YBoSIiIiIiIiIiEYMA0JERERERERERCOGASEiIiIiIiIiohHDgBAR\nERERERER0YhhQIiIiIiIiIiIaMQwIERERERERERENGIYECIiIiIiIiIiGjEMCBERERERERERjRgG\nhIiIiIiIiIiIRgwDQkREREREREREI4YBISIiIiIiIiKiEcOAEBERERERERHRiGFAiIiIiIiIiIho\nxDAgREREREREREQ0YoSUsj8/WIjzAJ7ryw/vvkkAy/1+EURNcI3SIOA6pUHAdUp2xzVKg4DrlAbB\nIK/TC6SUU5vdqW8BoWEihHhYSnl9v18HUSNcozQIuE5pEHCdkt1xjdIg4DqlQTAK65QlY0RERERE\nREREI4YBISIiIiIiIiKiEcOAUHd8uN8vgGgTXKM0CLhOaRBwnZLdcY3SIOA6pUEw9OuUPYSIiIiI\niIiIiEYMM4SIiIiIiIiIiEbMyAeEhBBOIcSjQoh7je9/TAjxiBDisBDiE0IIl7E9JoT4khDikBDi\nQSHEfmP7JUKIgxX/bQghfsW4bVwI8Q0hxDPG/2PGdiGE+FshxBHj+a7t1+9Pg6HH6/QPhBCLFbe9\nsuLn/paxTp8SQry8H787DY5O16lx268KIR43HvNZIYTP2L5HCPGAsR4/L4TwGNu9xvdHjNt3b/9v\nToOix2v0H4QQxyo+S68xtnOfT1vSpXX6buP+j6v9vbGdx6bUFT1epzw2pY4JIY4LIf7LWEMPG9u2\n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\niIhoxPx/a9Jr/kyVk5cAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1041da3d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "time = 300\n",
    "\n",
    "plt.figure(figsize=(20,10))\n",
    "plt.plot(df.CLOSE[-time:])\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(20,10))\n",
    "plt.plot(d.wr[-time:])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "metadata": {
    "collapsed": true,
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "### TALIB ###\n",
    "import talib\n",
    "\n",
    "# PARAMETERS\n",
    "close = df.CLOSE\n",
    "open = df.OPEN\n",
    "high = df.HIGH\n",
    "low = df.LOW\n",
    "volume = df.VOLUME\n",
    "\n",
    "for fn, args in config.items():\n",
    "    _ = getattr(talib, fn)(*args)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
